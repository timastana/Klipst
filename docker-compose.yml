version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: klipst_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/klipst_db"
      NEXTAUTH_URL: "http://localhost:3000"
      NEXTAUTH_SECRET: "your-secret-key-here"
      NODE_ENV: "production"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # If you have a separate landlord-frontend service
  landlord-frontend:
    build: 
      context: ./landlord-frontend
      dockerfile: Dockerfile
    ports:
      - "8180:8180"
    environment:
      NODE_ENV: "production"
      PORT: 8180
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8180/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Gateway/Proxy service
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      LANDLORD_FRONTEND_URL: "http://landlord-frontend:8180"
      NODE_ENV: "production"
    depends_on:
      landlord-frontend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
