name: PR Continuous Integration

on:
  pull_request:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Queue workflow if already running
        uses: ahmadnassri/action-workflow-queue@v1

      - name: Set image_tag value
        id: set
        run: echo "image_tag=$(echo pr-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }'))" >> $GITHUB_OUTPUT

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  build-images:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs: [setup, lint]
    strategy:
      matrix:
        include:
          - appname: gateway
            image: ghcr.io/${{ github.repository }}/gateway
            dockerfile: services/gateway/Dockerfile
          - appname: api
            image: ghcr.io/${{ github.repository }}/api
            dockerfile: services/api/Dockerfile
          - appname: tenantapi
            image: ghcr.io/${{ github.repository }}/tenantapi
            dockerfile: services/tenantapi/Dockerfile
          - appname: authenticator
            image: ghcr.io/${{ github.repository }}/authenticator
            dockerfile: services/authenticator/Dockerfile
          - appname: pdfgenerator
            image: ghcr.io/${{ github.repository }}/pdfgenerator
            dockerfile: services/pdfgenerator/Dockerfile
          - appname: emailer
            image: ghcr.io/${{ github.repository }}/emailer
            dockerfile: services/emailer/Dockerfile
          - appname: resetservice
            image: ghcr.io/${{ github.repository }}/resetservice
            dockerfile: services/resetservice/Dockerfile
          - appname: landlord-frontend
            image: ghcr.io/${{ github.repository }}/landlord-frontend
            dockerfile: webapps/landlord/Dockerfile
          - appname: tenant-frontend
            image: ghcr.io/${{ github.repository }}/tenant-frontend
            dockerfile: webapps/tenant/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          tags: '${{ matrix.image }}:${{ needs.setup.outputs.image_tag }}'
          labels: ${{ steps.meta.outputs.labels }}
          push: false
